// <auto-generated />
using System;
using CleanBlog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CleanBlog.Migrations
{
    [DbContext(typeof(HomeContext))]
    [Migration("20210209071628_BlogPost")]
    partial class BlogPost
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CleanBlog.Entity.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            FullName = "Serdar"
                        },
                        new
                        {
                            AuthorId = 2,
                            FullName = "Gürleyen"
                        });
                });

            modelBuilder.Entity("CleanBlog.Entity.BlogPost", b =>
                {
                    b.Property<int>("BlogPostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BlogPostId");

                    b.HasIndex("AuthorId");

                    b.ToTable("BlogPosts");

                    b.HasData(
                        new
                        {
                            BlogPostId = 1,
                            AuthorId = 1,
                            Content = "Content",
                            CreationDate = new DateTime(2021, 2, 9, 10, 16, 27, 106, DateTimeKind.Local).AddTicks(9057),
                            Title = "Blog Post 01"
                        },
                        new
                        {
                            BlogPostId = 2,
                            AuthorId = 1,
                            Content = "Content",
                            CreationDate = new DateTime(2021, 2, 9, 10, 16, 27, 115, DateTimeKind.Local).AddTicks(9960),
                            Title = "Blog Post 02"
                        },
                        new
                        {
                            BlogPostId = 3,
                            AuthorId = 2,
                            Content = "Content",
                            CreationDate = new DateTime(2021, 2, 9, 10, 16, 27, 116, DateTimeKind.Local).AddTicks(91),
                            Title = "Blog Post 03"
                        },
                        new
                        {
                            BlogPostId = 4,
                            AuthorId = 2,
                            Content = "Content",
                            CreationDate = new DateTime(2021, 2, 9, 10, 16, 27, 116, DateTimeKind.Local).AddTicks(143),
                            Title = "Blog Post 04"
                        });
                });

            modelBuilder.Entity("CleanBlog.Entity.Contact", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactFullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ContactID");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ContactID = 1,
                            ContactEmail = "serdar.gurleyen@siemens.com",
                            ContactFullName = "Serdar Gürleyen",
                            ContactNumber = "572892797",
                            Message = "her sey cok guzel calisiyor."
                        });
                });

            modelBuilder.Entity("CleanBlog.Entity.BlogPost", b =>
                {
                    b.HasOne("CleanBlog.Entity.Author", "Author")
                        .WithMany("BlogPosts")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("CleanBlog.Entity.Author", b =>
                {
                    b.Navigation("BlogPosts");
                });
#pragma warning restore 612, 618
        }
    }
}
